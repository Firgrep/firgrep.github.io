{"version":3,"file":"static/js/225.1de7958d.chunk.js","mappings":"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ACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,QAIWiF,EAAMjF,EAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,UAGWkF,EAAalF,EAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,iBAOWmF,EAAgBnF,EAAO,CAClC,UACA,gBACA,SACA,UACA,eACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,QAGWoF,EAASpF,EAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,aACA,gBAKWqF,EAAmBrF,EAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,SAGWsF,EAAOtF,EAAO,CAAC,UCrRfuF,EAAOvF,EAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,SAGWwF,EAAMxF,EAAO,CACxB,gBACA,aACA,WACA,qBACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,eAGWyF,EAASzF,EAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WACA,QACA,QACA,SACA,OACA,KACA,UACA,SACA,gBACA,SACA,SACA,iBACA,YACA,WACA,cACA,UACA,UACA,gBACA,WACA,WACA,OACA,WACA,WACA,aACA,UACA,SACA,SACA,cACA,gBACA,uBACA,YACA,YACA,aACA,WACA,iBACA,iBACA,YACA,UACA,QACA,UAGW0F,EAAM1F,EAAO,CACxB,aACA,SACA,cACA,YACA,gBCrWW2F,EAAgB1F,EAAK,6BACrB2F,EAAW3F,EAAK,yBAChB4F,EAAc5F,EAAK,iBACnB6F,EAAY7F,EAAK,8BACjB8F,EAAY9F,EAAK,kBACjB+F,EAAiB/F,EAC5B,6FAEWgG,EAAoBhG,EAAK,yBACzBiG,EAAkBjG,EAC7B,+DAEWkG,EAAelG,EAAK,W,yKCO3BmG,EAAY,WAAH,MAA4B,qBAAXC,OAAyB,KAAOA,MAAhE,EAUMC,EAA4B,SAAUC,EAAcC,GAEtD,GAAwB,kBAAjBD,GAC8B,oBAA9BA,EAAaE,aAEpB,OAAO,KAML,IAAAC,EAAS,KACPC,EAAY,wBAEhBH,EAASI,eACTJ,EAASI,cAAcC,aAAaF,KAEpCD,EAASF,EAASI,cAAcE,aAAaH,IAGzC,IAAAI,EAAa,aAAeL,EAAS,IAAMA,EAAS,IAEtD,IACF,OAAOH,EAAaE,aAAaM,EAAY,CAC3CC,WAAU,SAACzB,GACT,OAAOA,CACR,EACD0B,gBAAe,SAACC,GACd,OAAOA,CACR,GAEJ,CAAC,MAAOC,GAOP,OAHArC,QAAQC,KACN,uBAAyBgC,EAAa,0BAEjC,IACR,CACF,EAED,SAASK,KAAgB,IAAAf,EAASxD,UAAAC,OA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","sources":["../node_modules/dompurify/src/utils.js","../node_modules/dompurify/src/tags.js","../node_modules/dompurify/src/attrs.js","../node_modules/dompurify/src/regexp.js","../node_modules/dompurify/src/purify.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/marked/lib/marked.esm.js"],"sourcesContent":["const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    newObject[property] = value;\n  }\n\n  return newObject;\n}\n\n/* This method automatically checks if the prop is function\n * or getter and behaves accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined';\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get noscript mXSS */\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _construct.apply(null, arguments);\n}\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n"],"names":["entries","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","_ref","Reflect","apply","construct","fun","thisValue","args","x","Func","_construct","_toConsumableArray","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","length","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","l","element","lcElement","clone","object","_step","newObject","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","_slicedToArray","value","property","err","e","f","lookupGetter","prop","desc","get","fallbackValue","console","warn","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_","createDOMPurify","undefined","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","_document","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","PARSER_MEDIA_TYPE","EXPRESSIONS","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","concat","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","i","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmod","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","isNativeReflectConstruct","Parent","Class","module","exports","bind","__esModule","a","instance","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","encode","unescapeTest","unescape","charAt","fromCharCode","parseInt","substring","caret","edit","regex","opt","obj","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","splitCells","tableRow","count","cells","offset","str","escaped","curr","split","shift","splice","c","invert","suffLen","currChar","slice","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","state","inLink","token","type","tokens","inlineTokens","Tokenizer","options","_classCallCheck","this","_createClass","key","src","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","matchIndentInNode","join","indentCodeCompensation","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","pre","def","item","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","links","reflink","nolink","maskedSrc","prevChar","emStrong","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","_objectSpread","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","next","lastToken","cutSrc","lastParagraphClipped","_this","leading","tabs","_loop","extTokenizer","space","startBlock","tempStart","startIndex","Infinity","tempSrc","getStartIndex","errMsg","error","Error","_ret","keepPrevChar","_this2","keys","includes","lastIndexOf","_loop2","codespan","startInline","inlineText","_ret2","lex","Renderer","infostring","quote","slugger","id","slug","flags","TextRenderer","Slugger","seen","originalSlug","isDryRun","occurenceAccumulator","hasOwnProperty","serialize","getNextSafeSlug","dryrun","Parser","textRenderer","l2","l3","cell","itemBody","checkbox","ret","renderers","parser","parseInline","tablecell","tablerow","parse","unshift","listitem","image","Hooks","markdown","parseMarkdown","callback","origOpt","throwError","message","msg","Promise","resolve","reject","onError","marked","checkSanitizeDeprecation","preprocess","postprocess","pending","setTimeout","then","all","catch","_defineProperty","Set","setOptions","newDefaults","use","childTokens","pack","opts","ext","prevRenderer","_loop3","_len3","_key3","_loop4","_prop","prevTokenizer","_len4","_key4","_loop5","_prop2","prevHook","passThroughHooks","has","arg","_len5","_key5","values","_loop6","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","lexInline"],"sourceRoot":""}