{"version":3,"file":"static/js/337.2b3c7edb.chunk.js","mappings":"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","sources":["app/ErroBoundary.js","components/hero/index.js","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js","features/blog/BlogFilterSelection.js","features/blog/BlogItem.js","features/blog/Blog.js","pages/blogPage/index.js","util/util.js"],"sourcesContent":["import React from 'react';\r\n\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false};\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // This will update state so that the next render shows the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(error, info);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return this.props.fallback;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useEffect } from \"react\";\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport './index.css';\r\n\r\nconst Hero = ({ image, displayText, type }) => {\r\n\r\n    useEffect(() => {\r\n        AOS.init();\r\n    }, [])\r\n    \r\n    return (\r\n        <div\r\n            data-aos=\"fade-in\"\r\n            className=\"hero-container\"\r\n            style={{\r\n                backgroundImage: `linear-gradient(transparent, transparent), url(\"${\r\n                    image || getHeroImage(type)\r\n                }\") `,\r\n                height: getHeroHeight(type),\r\n                backgroundBlendMode: 'saturation',\r\n                backgroundSize: 'cover',\r\n                backgroundColor: 'transparent',\r\n                display: `${displayText ? \"flex\" : \"block\"}`,\r\n                justifyContent: `${displayText ? \"center\" : \"\"}`,\r\n                alignItems: `${displayText ? \"center\" : \"\"}`\r\n            //      linear-gradient(black, black)\r\n            }}\r\n            >\r\n            {   \r\n                displayText \r\n                &&\r\n                <h2 style={{backgroundColor: \"rgba(0,0,0,0.4)\", padding: \"10px\"}}>{displayText}</h2>\r\n            }\r\n            {\r\n                !displayText \r\n                &&\r\n                <>  \r\n                    <div data-aos=\"fade-down-left\" data-aos-delay=\"1000\" className=\"greetings\" style={{position: `${displayText ? \"\" : \"absolute\"}`}}>\r\n                        <h1>Hi! I'm Filip,</h1>\r\n                        <h2 style={{maxWidth: \"400px\"}}><b>I'm a philosophy teacher turned software developer</b></h2>\r\n                    </div>\r\n                    <div data-aos=\"fade-left\" data-aos-delay=\"1400\" className=\"avatar-container\" style={{position: `${displayText ? \"\" : \"absolute\"}`}}>\r\n                        <img className=\"img-fluid avatar\" src=\"avatar.webp\" alt=\"\"></img>\r\n                    </div>\r\n                    <div data-aos=\"fade-up\" data-aos-delay=\"1800\" className=\"card\" style={{position: `${displayText ? \"\" : \"absolute\"}`}}>\r\n                        <div className=\"card-body\">\r\n                        I sit at the intersection of web development and data analysis to extract insights and present them in a beautiful and easy-to-understand way that helps your business grow. <HashLink smooth to=\"/#contact\">Get in touch!</HashLink>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n  \r\nexport default Hero;\r\n\r\nconst getHeroImage = (type) => {\r\n    switch (type) {\r\n        case 'projects':\r\n            return 'projects.jpg';\r\n        case 'project':\r\n            return '../projects.jpg';\r\n        case 'blog':\r\n            return 'blog.webp';\r\n        case 'contact':\r\n            return 'contact.webp';\r\n        case 'about':\r\n            return 'coast.webp';\r\n        default: \r\n            return 'hero.webp';\r\n    }\r\n};\r\n\r\nconst getHeroHeight = (type) => {\r\n    switch (type) {\r\n        case 'projects':\r\n            return '400px';\r\n        case 'project':\r\n            return '400px';\r\n        case 'blog':\r\n            return '400px';\r\n        case 'contact':\r\n            return '400px';\r\n        case 'about':\r\n            return '400px';\r\n        default: \r\n            return '650px';\r\n    }\r\n};\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  let selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  let selectedColorChannel;\n  if (theme.vars) {\n    selectedColor = ownerState.color === 'standard' ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;\n    selectedColorChannel = ownerState.color === 'standard' ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;\n  }\n  return _extends({}, theme.typography.button, {\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${(theme.vars || theme).palette.divider}`,\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled,\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      disableFocusRipple = false,\n      fullWidth = false,\n      onChange,\n      onClick,\n      selected,\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes /* @typescript-to-proptypes-ignore */.any.isRequired\n} : void 0;\nexport default ToggleButton;","import React from 'react';\r\nimport { ToggleButton, Chip } from '@mui/material';\r\n\r\n\r\nexport const BlogFilterSelection = ({ tagsObj, selectedTags, setSelectedTags }) => {\r\n    \r\n    const handleClick = (e) => {\r\n        const value = e.currentTarget.value;\r\n        if (typeof value !== \"undefined\") {\r\n            setSelectedTags(prevTagObj => {\r\n                if (prevTagObj[value] === false) {\r\n                    return {...prevTagObj, [value]: true};\r\n                } else {\r\n                    return {...prevTagObj, [value]: false};\r\n                }})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section style={{\r\n            display: \"flex\", \r\n            justifyContent: \"center\", \r\n            gap: \"15px\", \r\n            marginBottom: \"65px\",\r\n            flexWrap: \"wrap\"\r\n        }}>\r\n            \r\n            {Object.keys(tagsObj).length > 1 &&\r\n                Object.entries(tagsObj).map(([tagName, tagCount]) => (\r\n                    <div key={tagName}>\r\n                    <ToggleButton\r\n                        selected={selectedTags[tagName]}\r\n                        onChange={handleClick}\r\n                        value={tagName}\r\n                        color=\"secondary\"\r\n                        size=\"small\"\r\n                    >\r\n                        {tagName}<br></br>\r\n                        <Chip\r\n                            label={tagCount}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            color=\"info\"\r\n                            style={{marginLeft: \"1px\"}}\r\n                        \r\n                        />\r\n\r\n                        {/* {`[${tagCount}]`} */}\r\n                        \r\n                    </ToggleButton>\r\n                    </div>\r\n                ))\r\n            }\r\n            \r\n        </section>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport { formatDateString, formatTag, formatDateStringYearMonth } from '../../util/util';\r\nimport { Chip, Button } from \"@mui/material\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const BlogItem = ({ content }) => {\r\n\r\n    return (\r\n        <article className=\"blog-item\">\r\n            <h2>\r\n                <Link\r\n                    to={`/blog/${content.id}/${formatDateStringYearMonth(content.date)}/${content.fragment}`}\r\n                    className=\"site-link-extra\"\r\n                >\r\n                    {content.title}\r\n                </Link>\r\n            </h2>\r\n            <span className=\"date-style\">{formatDateString(content.date)}</span>\r\n            <ul className=\"tags\">\r\n            { content?.tags && content.tags.map((tag) => (\r\n                <li key={tag}>\r\n                    <Chip \r\n                        variant=\"outlined\" \r\n                        color=\"info\" \r\n                        size=\"small\"\r\n                        label={`${formatTag(tag)}`}\r\n                    />\r\n                </li>\r\n            ))}\r\n            </ul>\r\n            <p>{content.preview}</p>\r\n            <Link\r\n                to={`/blog/${content.id}/${formatDateStringYearMonth(content.date)}/${content.fragment}`}\r\n            >\r\n                <Button variant=\"contained\">\r\n                    Read more\r\n                </Button>\r\n            </Link>\r\n        </article>    \r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectBlogLoading, selectBlogError, selectBlog, selectBlogLoaded, loadBlog } from './blogSlice';\r\nimport { BlogFilterSelection } from './BlogFilterSelection';\r\nimport ErrorBoundary from '../../app/ErroBoundary';\r\nimport { BlogItem } from './BlogItem';\r\nimport './blog.css';\r\n\r\n\r\nexport const Blog = () => {\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector(selectBlogLoading);\r\n    const error = useSelector(selectBlogError);\r\n    const blog = useSelector(selectBlog);\r\n    const loaded = useSelector(selectBlogLoaded);\r\n    const [ tagsObjCount, setTagsObjCount ] = useState({});\r\n    const [ tagsObjSelected, setTagsObjSelected ] = useState({});\r\n    const [ selectedTagsArr, setSelectedTagsArr ] = useState([]);\r\n\r\n    /**\r\n     * Sets the state of selectedTagsArr array by the received argument object,\r\n     * which is expected to contain key-value pairs of tag-bool for each tag.\r\n     * Each tag property is filtered for true, and sets the state by populating it\r\n     * with only an array of the tags as strings.\r\n     * @param {object} tagObj Expects an object mapped with tags and bool.\r\n     */\r\n    const controlSelectedTags = (tagObj) => {\r\n        setSelectedTagsArr(() => {\r\n            const preSelection = Object.entries(tagObj).filter(([key, value]) => value === true);\r\n            const selection = preSelection.flat().filter(item => typeof item === \"string\");\r\n            return selection;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Sets the state of tagsObjCount by counting based on the argument tag.\r\n     * @param {string} tag \r\n     */\r\n    const populateTagsCount = (tag) => {// setTagObjCount expects an object assignment, not a number, so the whole thing needs to be copied over.\r\n        const tagLower = tag.toLowerCase();\r\n\r\n        setTagsObjCount(prevTagObj => {\r\n            if (!prevTagObj.hasOwnProperty(tagLower)) {\r\n                return {...prevTagObj, [tagLower]: 1};\r\n            } else {\r\n                return {...prevTagObj, [tagLower]: prevTagObj[tagLower] + 1};\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets the tagsObjSelected state based on whether incoming tag is not in the previous tagObjSelected,\r\n     * in which case it is set to false; otherwise the previous tagObjSelected is returned as is.\r\n     * The idea with this function is just to populate a map of unique tag names to bool values.\r\n     * @param {string} tag \r\n     */\r\n    const populateTagsSelection = (tag) => {\r\n        const tagLower = tag.toLowerCase();\r\n\r\n        setTagsObjSelected(prevTagObj => {\r\n            if (!prevTagObj.hasOwnProperty(tagLower)) {\r\n                return {...prevTagObj, [tagLower]: false};\r\n            } else {\r\n                return prevTagObj;\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Filters nested objects based on any matching value between individual object's set of tags\r\n     * and the controlled array.\r\n     * @param {object} blogObj - blog data object - Contains data about blog posts.\r\n     * @param {array} controlArr - selected tags array - List of currently selected tags.\r\n     * @returns {array} Filtered array of arrays where each sub-array contains key-value pair.\r\n     */\r\n    const filterForSelectedTags = (blogObj, controlArr) => { // See bottom for alternative (incomplete)\r\n        const arrayOfEntries = Object.entries(blogObj);\r\n        const filteredEntriesArray = arrayOfEntries.filter(([key, value]) => {return controlArr.some(tag => value.tags.includes(tag))});\r\n        return filteredEntriesArray;\r\n    };\r\n\r\n    /**\r\n     * Callback function for .sort() to compare date properties.\r\n     * @param {string} a - expects ISO string of time\r\n     * @param {string} b - expects ISO string of time\r\n     * @returns \r\n     */\r\n    const compareDates = (dateA, dateB) => {\r\n        return new Date(dateB) - new Date(dateA);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!loaded) {\r\n            dispatch(loadBlog());\r\n        }\r\n    }, [dispatch, loaded]);\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(blog).length !== 0) {\r\n            Object.entries(blog).forEach(([key, content]) => (\r\n                content.tags.forEach((tag) => {\r\n                    populateTagsCount(tag)\r\n                    populateTagsSelection(tag)\r\n                })\r\n        ))};\r\n        \r\n    }, [blog])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(tagsObjSelected).length !== 0) {\r\n            controlSelectedTags(tagsObjSelected);\r\n        }\r\n    }, [tagsObjSelected])\r\n\r\n\r\n    if (loading === true) {\r\n        return(\r\n            <h2 style={{textAlign: \"center\"}}>Loading ... </h2>\r\n        )\r\n    }\r\n\r\n    if (error === true) {\r\n        console.log(\"Blog Slice has loaded with error.\");\r\n        return(\r\n            <h2 style={{textAlign: \"center\"}}>Error in blog data! See console log.</h2>\r\n        )\r\n    }\r\n\r\n    if (Object.keys(blog)?.length === 0) {\r\n        return(\r\n            <h2 style={{textAlign: \"center\"}}>No blog found. Data is <i>undefined</i>, error likely at API. Check console log for more info.</h2>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <section className=\"blog-list\">\r\n            <ErrorBoundary fallback=\"Error in BlogFilterSelect Comp. See console for more details.\">\r\n                <BlogFilterSelection \r\n                    tagsObj={tagsObjCount}\r\n                    selectedTags={tagsObjSelected}\r\n                    setSelectedTags={setTagsObjSelected}\r\n                />\r\n            </ErrorBoundary>\r\n\r\n            <div>\r\n                {blog && Object.keys(blog).length > 0 &&\r\n                selectedTagsArr.length === 0 \r\n                \r\n                ?\r\n            \r\n                Object.entries(blog)\r\n                    .sort(([idA, contentA], [idB, contentB]) => compareDates(contentA.date, contentB.date))\r\n                    .map(([id, content]) => (\r\n                        <BlogItem key={id} content={content} />\r\n                    ))\r\n\r\n                :\r\n\r\n                filterForSelectedTags(blog, selectedTagsArr)\r\n                    .sort(([idA, contentA], [idB, contentB]) => compareDates(contentA.date, contentB.date))\r\n                    .map(([id, content]) => (\r\n                        <BlogItem key={id} content={content} />\r\n                    ))}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport Hero from '../../components/hero/index.js';\r\nimport { Blog } from '../../features/blog/Blog.js';\r\nimport ErrorBoundary from '../../app/ErroBoundary.js';\r\n\r\nconst BlogPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Hero\r\n                displayText=\"Blog\"\r\n                type=\"blog\"\r\n            />\r\n            <main className=\"container\">\r\n                <ErrorBoundary fallback=\"Error in Blog component. Check console log for details.\">\r\n                    <Blog /> \r\n                </ErrorBoundary>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BlogPage;\r\n","/**\r\n * Formats a string in simplified extended ISO format, zero UTC offset, and returns\r\n * a string local to GB in the form of \"DD Month YYYY\".\r\n * @param {string} dateString - Expects a string in simplified extended ISO format.\r\n * @returns \r\n */\r\nexport const formatDateString = (dateString) => {\r\n    const date = new Date(dateString);\r\n\r\n    // Old setup with YYYY-MM-DD output\r\n    // const year = date.getFullYear();\r\n    // const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // JavaScript months are go from 0-11\r\n    // const day = (\"0\" + date.getDate()).slice(-2);\r\n\r\n    // return `${year}-${month}-${day}`;\r\n\r\n    const options = { day: 'numeric', month: 'long', year: 'numeric' };\r\n    return date.toLocaleDateString('en-GB', options);\r\n}\r\n\r\n/**\r\n * Formats a string in simplified extended ISO format, zero UTC offset, and returns\r\n * a string in the form \"YYYY-MM\".\r\n * @param {string} dateString - Expects a string in simplified extended ISO format.\r\n * @returns \r\n */\r\nexport const formatDateStringYearMonth = (dateString) => {\r\n    const date = new Date(dateString);\r\n\r\n    const year = date.getFullYear();\r\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n\r\n    return `${year}-${month}`;\r\n}\r\n\r\n/**\r\n * Formats tags by either capitalizing them, or turning all-caps, \r\n * or capitalized camelCase (if supported). If not supported, returns\r\n * tag as is.\r\n * @param {string} tag - Language or tech tool name\r\n * @returns \r\n */\r\nexport const formatTag = (tag) => {\r\n    const supportedTagsSimple = [\"react\", \"redux\", \"python\", \"django\", \"firebase\", \"general\"]\r\n\r\n    if (tag.toLowerCase() === \"javascript\") {\r\n        return \"JavaScript\";\r\n    }\r\n\r\n    if (tag.toLowerCase() === \"css\") {\r\n        return \"CSS\";\r\n    }\r\n\r\n    if (tag.toLowerCase() === \"html\") {\r\n        return \"HTML\";\r\n    }\r\n\r\n    if (supportedTagsSimple.includes(tag.toLowerCase())) {\r\n        return tag.charAt(0).toUpperCase() + tag.slice(1);\r\n    }\r\n\r\n    return tag;\r\n}\r\n"],"names":["ErrorBoundary","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","hasError","_createClass","key","value","error","info","console","log","this","fallback","children","React","_ref","image","displayText","type","useEffect","AOS","_jsxs","className","style","backgroundImage","concat","getHeroImage","height","getHeroHeight","backgroundBlendMode","backgroundSize","backgroundColor","display","justifyContent","alignItems","_jsx","padding","_Fragment","position","maxWidth","src","alt","HashLink","smooth","to","getToggleButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ToggleButtonRoot","styled","ButtonBase","name","overridesResolver","styles","ownerState","root","capitalize","size","_extends2","selectedColorChannel","theme","selectedColor","color","palette","text","primary","main","vars","primaryChannel","mainChannel","_extends","typography","button","borderRadius","shape","border","divider","action","active","fullWidth","width","_defineProperty","toggleButtonClasses","disabled","disabledBackground","textDecoration","hoverOpacity","alpha","selectedOpacity","fontSize","pxToRem","inProps","ref","useThemeProps","_props$color","_props$disabled","_props$disableFocusRi","disableFocusRipple","_props$fullWidth","onChange","onClick","selected","_props$size","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","focusRipple","event","defaultPrevented","BlogFilterSelection","tagsObj","selectedTags","setSelectedTags","handleClick","e","currentTarget","prevTagObj","_objectSpread","gap","marginBottom","flexWrap","Object","keys","length","entries","map","_ref2","_ref3","_slicedToArray","tagName","tagCount","ToggleButton","Chip","label","variant","marginLeft","BlogItem","content","Link","id","formatDateStringYearMonth","date","fragment","title","formatDateString","tags","tag","formatTag","preview","Button","Blog","_Object$keys","blogObj","controlArr","dispatch","useDispatch","loading","useSelector","selectBlogLoading","selectBlogError","blog","selectBlog","loaded","selectBlogLoaded","_useState","useState","_useState2","tagsObjCount","setTagsObjCount","_useState3","_useState4","tagsObjSelected","setTagsObjSelected","_useState5","_useState6","selectedTagsArr","setSelectedTagsArr","compareDates","dateA","dateB","Date","loadBlog","forEach","_ref5","_ref6","tagLower","toLowerCase","hasOwnProperty","populateTagsCount","populateTagsSelection","tagObj","filter","flat","item","textAlign","sort","_ref7","_ref8","_ref9","contentA","_ref10","contentB","_ref11","_ref12","_ref4","some","includes","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","Hero","dateString","toLocaleDateString","day","month","year","getFullYear","getMonth","slice","charAt","toUpperCase"],"sourceRoot":""}